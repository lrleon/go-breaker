memory_threshold = 80.0
latency_threshold = 1500
latency_window_size = 64
percentile = 0.95
wait_time = 10
trend_analysis_enabled = false
trend_analysis_min_sample_count = 10

[opsgenie]
enabled = true
region = "us"
source = "go-breaker"
team = "Sports Models APIs"
priority = "P2"

# Staged alerting configuration
time_before_send_alert = 60
initial_alert_priority = "P3"
escalated_alert_priority = "P2"

# Alert triggers
trigger_on_breaker_open = true
trigger_on_breaker_reset = true
trigger_on_memory_threshold = true
trigger_on_latency_threshold = true
include_latency_metrics = true
include_memory_metrics = true
include_system_info = true
alert_cooldown_seconds = 300

# Tags - AQUÍ va toda la información de entorno y contexto
tags = [
    "Environment:production",       # Entorno
    "API:Basketball",              # Proyecto
    "Component:circuit-breaker",   # Componente
    "Team:sports-models",          # Equipo
    "Priority:critical"            # Prioridad de negocio
]

# API Information
api_name = "Payment API"
api_version = "v1.2.3"
api_namespace = "payment"
api_description = "Handles payment processing and transactions"
api_owner = "Payments Team"
api_priority = "critical"
api_dependencies = ["database", "auth-service", "notification-service"]
api_endpoints = ["/payments", "/refunds", "/transactions"]